package com.taipan.userbot.router;

import com.taipan.userbot.bot.BotCore;
import com.taipan.userbot.model.MessageHistory;
import com.taipan.userbot.model.UserEntity;
import com.taipan.userbot.service.MessageHistoryService;
import com.taipan.userbot.service.UserService;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Update;

@Component
public class UpdateRouter {
    private final UserService userService;
    private final MessageHistoryService messageHistoryService;

    public UpdateRouter(UserService userService, MessageHistoryService messageHistoryService) {
        this.userService = userService;
        this.messageHistoryService = messageHistoryService;
    }

    public void route(Update update, BotCore bot) {
        if (update.hasMessage()) {
            org.telegram.telegrambots.meta.api.objects.User tgUser = update.getMessage().getFrom();
            String messageText = update.getMessage().getText();
            long chatId = update.getMessage().getChatId();

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            UserEntity user = userService.getOrCreateUser(tgUser);
            System.out.println("üë§ User saved: " + user.getUsername());

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
            MessageHistory message = new MessageHistory();
            message.setUser(user);
            message.setMessageText(messageText);
            messageHistoryService.saveMessage(message);
            System.out.println("üí¨ Message saved: " + messageText);

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            handleMessage(update, bot);
        }
    }

    private void handleMessage(Update update, BotCore bot) {
        String text = update.getMessage().getText();
        long chatId = update.getMessage().getChatId();

        String responseText = "–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + text;
        if (text.startsWith("/")) {
            responseText = "–ö–æ–º–∞–Ω–¥–∞ " + text + " –ø–æ–ª—É—á–µ–Ω–∞. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–∑–∂–µ.";
        }

        sendResponse(chatId, responseText, bot);
    }

    private void handleDocument(Update update, BotCore bot) {
        String fileName = update.getMessage().getDocument().getFileName();
        long chatId = update.getMessage().getChatId();
        sendResponse(chatId, "üìÑ –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª: " + fileName, bot);
    }

    private void handleCallbackQuery(Update update, BotCore bot) {
        String data = update.getCallbackQuery().getData();
        long chatId = update.getCallbackQuery().getMessage().getChatId();
        sendResponse(chatId, "–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É: " + data, bot);
    }

    private void sendResponse(long chatId, String text, BotCore bot) {
        try {
            bot.execute(org.telegram.telegrambots.meta.api.methods.send.SendMessage.builder()
                    .chatId(String.valueOf(chatId))
                    .text(text)
                    .build());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}